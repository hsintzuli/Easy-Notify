extends layout.pug

block variables
    - var userName = user.name
block content
  // daterange picker
  link(rel='stylesheet' href='/vendor/plugins/daterangepicker/daterangepicker.css')
  // iCheck for checkboxes and radio inputs
  link(rel='stylesheet' href='/vendor/plugins/icheck-bootstrap/icheck-bootstrap.min.css')
  // Tempusdominus Bootstrap 4
  link(rel='stylesheet' href='/vendor/plugins/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css')
  link(rel='stylesheet' href='https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css')
  style.
      .btn-sm {
        background-color: #E8E8E7;
      }
  // Content Wrapper. Contains page content
  .content-wrapper
    // Content Header (Page header)
    .content-header
      .container-fluid
        .row.justify-content-center.align-items-center
          .col-8
            .card.card-primary.shadow
              .card-header
                h3.card-title Send Notification
              // /.card-header
              // form start
              form#notification-form(action='')
                .card-body
                  .row
                    .col-sm-6
                      .form-group
                        label APP
                        select.form-control.selectpicker#app-select(name='app' onchange='changeApp()' required)
                          each app in apps
                            option=app
                    .col-sm-6
                      .form-group
                        label Channel
                        select.form-control.selectpicker#channel-select(name='channel' required)
                          //- each channel in channels
                          //-   option=channel.name
                  .row
                    .col-sm-6                  
                      .form-group
                        label(for='input-name') Name
                        input#input-title.form-control(type='text' name='name' placeholder='Name For Notification' required)
                    .col-sm-6                  
                      .form-group
                        label(for='input-title') Title
                        input#input-title.form-control(type='text' name='title' placeholder='Enter Notification Title' required)
                  .form-group
                    label(for='input-body') Body
                    input#input-body.form-control(type='text' name='body' placeholder='Enter Notification Body' required)
                  .form-group
                    label(for='send-type') Send-Type
                    select.selectpicker#send-type.form-control(name='sendType' required)
                      option websocket
                      option webpush
                  .form-group
                    label.mr-sm-2(for='time-type') Send-Time
                    .form-check.form-check-inline#realtime-check
                      input#send-realtime.form-check-input(type='radio' name='sendTimeOpt' value='realtime')
                      label.form-check-label(for='send-realtime') Realtime
                    .form-check.form-check-inline
                      input#send-scheduled.form-check-input(type='radio' name='sendTimeOpt' value='scheduled')
                      label.form-check-label(for='send-scheduled') Scheduled
                  // Date and time
                  .form-group
                    label Date and time:
                    #reservationdatetime.input-group.date(data-target-input='nearest')
                      input.form-control.datetimepicker-input(type='text' name='sendTime' data-target='#reservationdatetime' required)
                      .input-group-append(data-target='#reservationdatetime' data-toggle='datetimepicker')
                        .input-group-text
                          i.fa.fa-calendar
                  .form-group
                    label(for='input-icon') Icon url
                      button.btn.btn-sm.shadow-sm.py-0.ml-2#icon-btn Default Icon
                    textarea#input-icon.form-control(type='text' name='icon' placeholder='Icon for notification')
                  .form-group
                    label(for='input-config') Config
                      button.btn.btn-sm.shadow-sm.py-0.ml-2#json-btn View in JSON
                    textarea#input-config.form-control(type='text' name='config' placeholder='Customized Configuration Section')

                  // /.form group
                .card-footer
                  button.btn.btn-primary(type='submit') Submit
  // InputMask
  script(src='/vendor/plugins/moment/moment.min.js')
  script(src='/vendor/plugins/inputmask/jquery.inputmask.min.js')
  // date-range-picker
  script(src='/vendor/plugins/daterangepicker/daterangepicker.js')
  script(src='https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/js/bootstrap-select.min.js')
  // Tempusdominus Bootstrap 4
  script(src='/vendor/plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js')
  script(src='https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/js/bootstrap-select.min.js')
  script. 
    var channelGroupByApp = JSON.parse('!{JSON.stringify(channelGroupByApp)}');
  script.
    $(function () {
      console.log(channelGroupByApp)
        if (!channelGroupByApp || !Object.keys(channelGroupByApp) ||ã€€!Object.keys(channelGroupByApp).length) {
            return Swal.fire({
                      icon: 'info',
                      title: 'Not yet have a channel',
                      text: 'Create a channel now',
                      width: '450px',
                    }).then(function() {
                      window.location = `/management/apps`;
                    });
        }
        $('.nav-sidebar a').removeClass('active')
        $('#sending-li').addClass('menu-open')
        $('#sending-nav').addClass('active')
        $('#notification-nav').addClass('active')
      $('.selectpicker').selectpicker();
      //Date and time picker
      $("#reservationdatetime").datetimepicker({ format: 'YYYY-MM-D HH:mm', icons: { time: "far fa-clock" } });

    });

    function pushSuccess(notification_id) {
            return Swal.fire({
              icon: 'success',
              title: 'Create Notification successfully',
              text: 'Click to view notification report.',
              showCancelButton: true
            }).then(function(result) {
              if (result.isConfirmed) {
                window.location = `/management/reports/notifications?id=${notification_id}`;
              }
            });
    }
    function pushFail(error) {
            Swal.fire({
              icon: 'error',
              title: 'Create Notification failed',
              text: error
            })
      }
  script(src='/assets/js/notification.js')
